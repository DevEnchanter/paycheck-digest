
import React,{useState,useEffect,useCallback}from'react';import{useDropzone}from'react-dropzone';import{LineChart,Line,CartesianGrid,XAxis,YAxis,Tooltip,ResponsiveContainer}from'recharts';
export default function App(){const[result,setResult]=useState(null),[history,setHistory]=useState([]),[analytics,setAnalytics]=useState(null),[loading,setLoading]=useState(!1),[error,setError]=useState(null);
useEffect(()=>{fetch('/history').then(r=>r.json()).then(setHistory).catch(()=>{});fetch('/analytics').then(r=>r.json()).then(setAnalytics).catch(()=>{});},[]);
const onDrop=useCallback(async files=>{setError(null);setLoading(!0);const f=new FormData();f.append('file',files[0]);let text;try{const r=await fetch('/digest',{method:'POST',body:f});text=await r.text();r.ok||function(){throw new Error(text);}()}catch(e){return setError(`Network error: ${e.message}`),setLoading(!1),void 0;}let json;try{json=JSON.parse(text);}catch{return setError(`Invalid JSON: ${text}`),setLoading(!1),void 0;}setResult(json);try{setHistory(await fetch('/history').then(r=>r.json()));}catch{}try{setAnalytics(await fetch('/analytics').then(r=>r.json()));}catch{}setLoading(!1);},[]);
const{getRootProps,getInputProps,isDragActive}=useDropzone({onDrop});return(
<div className="min-h-screen p-6 bg-gray-100 font-sans">
<h1 className="text-3xl font-bold text-center mb-6">Paycheck Digest</h1>
<div {...getRootProps()} className="mx-auto max-w-md p-6 border-2 border-dashed rounded bg-white cursor-pointer">
<input{...getInputProps()}/><p className="text-center text-gray-600">{isDragActive?'Drop your PDF/ZIP here…':'Drag & drop a pay‑stub PDF/ZIP here, or click to select'}</p>
</div>
{loading&&<div className="text-center mt-4 text-blue-600">Processing…</div>}
{error&&<div className="mt-4 max-w-md mx-auto p-4 bg-red-100 text-red-700 rounded"><strong>Error:</strong><pre className="whitespace-pre-wrap">{error}</pre></div>}
{analytics&&<div className="grid grid-cols-2 gap-4 mt-8 max-w-xl mx-auto"><div className="p-4 bg-white rounded shadow"><h2 className="font-semibold">Total Gross</h2><p>${analytics.total_gross.toFixed(2)}</p></div><div className="p-4 bg-white rounded shadow"><h2 className="font-semibold">Total Net</h2><p>${analytics.total_net.toFixed(2)}</p></div><div className="p-4 bg-white rounded shadow"><h2 className="font-semibold">Avg Net</h2><p>${analytics.avg_net.toFixed(2)}</p></div><div className="p-4 bg-white rounded shadow"><h2 className="font-semibold">Net Trend</h2><p>{analytics.net_trend_slope.toFixed(2)} per period</p></div></div>}
{history.length>1&&<div className="mt-8 max-w-xl mx-auto"><h2 className="text-2xl font-semibold mb-2">Net Pay Trend</h2><ResponsiveContainer width="100%" height={300}><LineChart data={history}><CartesianGrid stroke="#ccc"/><XAxis dataKey="period_start"/><YAxis dataKey="net_pay"/><Tooltip/><Line type="monotone" dataKey="net_pay" stroke="#2563EB" dot={false}/></LineChart></ResponsiveContainer></div>}
{result&&!loading&&<div className="mt-8 p-6 bg-white rounded shadow max-w-xl mx-auto"><h2 className="text-xl font-semibold mb-2">Latest Result</h2><div className="summary-container" dangerouslySetInnerHTML={{__html: result.html_summary}}/></div>}
</div>);}